import parse, { parseLine } from './parse'

describe('parse csv', () => {
  test('success', () => {
    const input = `Date,Open,High,Low,Close,Adj Close,Volume
2019-01-01,150.990005,168.990005,149.490005,168.160004,166.785553,933706500
2019-02-01,167.330002,174.660004,166.570007,173.190002,171.774429,535964100
2019-03-01,174.440002,182.830002,169.339996,179.660004,178.191559,781972700
2019-04-01,181.509995,191.320007,180.770004,189.539993,188.332932,550157700
2019-05-01,190.779999,191.320007,173.869995,173.949997,172.842209,901554000
2019-06-01,173.479996,189.770004,169.270004,186.740005,185.550766,688631900
2019-07-01,190.320007,195.550003,188.380005,191.100006,190.302826,494382600
2019-08-01,191.429993,194.979996,179.199997,187.470001,186.687958,814286500
2019-09-01,186.220001,194.710007,185.029999,188.809998,188.022369,550435200
2019-10-01,189.500000,197.830002,181.820007,197.080002,196.653656,577007000
2019-11-01,197.929993,206.050003,197.630005,205.100006,204.656296,351429700
2019-12-01,205.110001,214.559998,199.229996,212.610001,212.150055,429951100
2020-01-01,214.399994,225.880005,212.240005,219.070007,219.070007,585331700
2020-02-01,220.139999,237.470001,198.169998,205.800003,205.800003,953525400
2020-03-01,208.759995,219.610001,176.940002,192.339996,192.339996,1064429300`

    const output = [
      { date: '2019-01-01', open: 150.990005 },
      { date: '2019-02-01', open: 167.330002 },
      { date: '2019-03-01', open: 174.440002 },
      { date: '2019-04-01', open: 181.509995 },
      { date: '2019-05-01', open: 190.779999 },
      { date: '2019-06-01', open: 173.479996 },
      { date: '2019-07-01', open: 190.320007 },
      { date: '2019-08-01', open: 191.429993 },
      { date: '2019-09-01', open: 186.220001 },
      { date: '2019-10-01', open: 189.5 },
      { date: '2019-11-01', open: 197.929993 },
      { date: '2019-12-01', open: 205.110001 },
      { date: '2020-01-01', open: 214.399994 },
      { date: '2020-02-01', open: 220.139999 },
      { date: '2020-03-01', open: 208.759995 }
    ]

    expect(parse(input)).toEqual(output)
  })

  test('failure 1', () => {
    const input = `Date,Open,High,Low,Close,Adj Close,Volume
2019-01-01,`

    expect(parse(input)).toEqual([])
  })

  test('failure 2', () => {
    const input = `Date,Open,High,Low,Close,Adj Close,Volume
2019-01-01,ERROR`

    expect(parse(input)).toEqual([])
  })
})

test('parse line', () => {
  const input =
    '2000-01-01,96.187500,97.625000,79.750000,89.687500,78.505074,583431800'

  const output = { date: '2000-01-01', open: 96.1875 }

  expect(parseLine(input)).toEqual(output)
})
